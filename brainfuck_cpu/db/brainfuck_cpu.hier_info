|brainfuck_main
clk => clk.IN4
rst => rst.IN1
led[0] << led_reg[0].DB_MAX_OUTPUT_PORT_TYPE
led[1] << led_reg[1].DB_MAX_OUTPUT_PORT_TYPE
led[2] << led_reg[2].DB_MAX_OUTPUT_PORT_TYPE
led[3] << led_reg[3].DB_MAX_OUTPUT_PORT_TYPE
uart_out << uart_tx:UART_TX_INST.o_Tx_Serial
Segments[0] << seven_segment_controller:SEVEN_SEG_INST.o_Segment
Segments[1] << seven_segment_controller:SEVEN_SEG_INST.o_Segment
Segments[2] << seven_segment_controller:SEVEN_SEG_INST.o_Segment
Segments[3] << seven_segment_controller:SEVEN_SEG_INST.o_Segment
Segments[4] << seven_segment_controller:SEVEN_SEG_INST.o_Segment
Segments[5] << seven_segment_controller:SEVEN_SEG_INST.o_Segment
Segments[6] << seven_segment_controller:SEVEN_SEG_INST.o_Segment
Cathodes[0] << seven_segment_controller:SEVEN_SEG_INST.o_Cathode
Cathodes[1] << seven_segment_controller:SEVEN_SEG_INST.o_Cathode
Cathodes[2] << seven_segment_controller:SEVEN_SEG_INST.o_Cathode
Cathodes[3] << seven_segment_controller:SEVEN_SEG_INST.o_Cathode


|brainfuck_main|PLL:PLL_INST
inclk0 => sub_wire3[0].IN1
c0 <= altpll:altpll_component.clk


|brainfuck_main|PLL:PLL_INST|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|brainfuck_main|PLL:PLL_INST|altpll:altpll_component|PLL_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|brainfuck_main|PLL1:PLL_INST1
inclk0 => sub_wire3[0].IN1
c0 <= altpll:altpll_component.clk


|brainfuck_main|PLL1:PLL_INST1|altpll:altpll_component
inclk[0] => PLL1_altpll:auto_generated.inclk[0]
inclk[1] => PLL1_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|brainfuck_main|PLL1:PLL_INST1|altpll:altpll_component|PLL1_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|brainfuck_main|ram:RAM_INST
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
rden => rden.IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|brainfuck_main|ram:RAM_INST|altsyncram:altsyncram_component
wren_a => altsyncram_e5g1:auto_generated.wren_a
rden_a => altsyncram_e5g1:auto_generated.rden_a
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_e5g1:auto_generated.data_a[0]
data_a[1] => altsyncram_e5g1:auto_generated.data_a[1]
data_a[2] => altsyncram_e5g1:auto_generated.data_a[2]
data_a[3] => altsyncram_e5g1:auto_generated.data_a[3]
data_a[4] => altsyncram_e5g1:auto_generated.data_a[4]
data_a[5] => altsyncram_e5g1:auto_generated.data_a[5]
data_a[6] => altsyncram_e5g1:auto_generated.data_a[6]
data_a[7] => altsyncram_e5g1:auto_generated.data_a[7]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_e5g1:auto_generated.address_a[0]
address_a[1] => altsyncram_e5g1:auto_generated.address_a[1]
address_a[2] => altsyncram_e5g1:auto_generated.address_a[2]
address_a[3] => altsyncram_e5g1:auto_generated.address_a[3]
address_a[4] => altsyncram_e5g1:auto_generated.address_a[4]
address_a[5] => altsyncram_e5g1:auto_generated.address_a[5]
address_a[6] => altsyncram_e5g1:auto_generated.address_a[6]
address_a[7] => altsyncram_e5g1:auto_generated.address_a[7]
address_a[8] => altsyncram_e5g1:auto_generated.address_a[8]
address_a[9] => altsyncram_e5g1:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_e5g1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_e5g1:auto_generated.q_a[0]
q_a[1] <= altsyncram_e5g1:auto_generated.q_a[1]
q_a[2] <= altsyncram_e5g1:auto_generated.q_a[2]
q_a[3] <= altsyncram_e5g1:auto_generated.q_a[3]
q_a[4] <= altsyncram_e5g1:auto_generated.q_a[4]
q_a[5] <= altsyncram_e5g1:auto_generated.q_a[5]
q_a[6] <= altsyncram_e5g1:auto_generated.q_a[6]
q_a[7] <= altsyncram_e5g1:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|brainfuck_main|ram:RAM_INST|altsyncram:altsyncram_component|altsyncram_e5g1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
rden_a => ram_block1a0.PORTARE
rden_a => ram_block1a1.PORTARE
rden_a => ram_block1a2.PORTARE
rden_a => ram_block1a3.PORTARE
rden_a => ram_block1a4.PORTARE
rden_a => ram_block1a5.PORTARE
rden_a => ram_block1a6.PORTARE
rden_a => ram_block1a7.PORTARE
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a7.PORTAWE


|brainfuck_main|prog_ram:PROG_RAM_INST
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
rden => rden.IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a


|brainfuck_main|prog_ram:PROG_RAM_INST|altsyncram:altsyncram_component
wren_a => altsyncram_rci1:auto_generated.wren_a
rden_a => altsyncram_rci1:auto_generated.rden_a
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_rci1:auto_generated.data_a[0]
data_a[1] => altsyncram_rci1:auto_generated.data_a[1]
data_a[2] => altsyncram_rci1:auto_generated.data_a[2]
data_a[3] => altsyncram_rci1:auto_generated.data_a[3]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_rci1:auto_generated.address_a[0]
address_a[1] => altsyncram_rci1:auto_generated.address_a[1]
address_a[2] => altsyncram_rci1:auto_generated.address_a[2]
address_a[3] => altsyncram_rci1:auto_generated.address_a[3]
address_a[4] => altsyncram_rci1:auto_generated.address_a[4]
address_a[5] => altsyncram_rci1:auto_generated.address_a[5]
address_a[6] => altsyncram_rci1:auto_generated.address_a[6]
address_a[7] => altsyncram_rci1:auto_generated.address_a[7]
address_a[8] => altsyncram_rci1:auto_generated.address_a[8]
address_a[9] => altsyncram_rci1:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_rci1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_rci1:auto_generated.q_a[0]
q_a[1] <= altsyncram_rci1:auto_generated.q_a[1]
q_a[2] <= altsyncram_rci1:auto_generated.q_a[2]
q_a[3] <= altsyncram_rci1:auto_generated.q_a[3]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|brainfuck_main|prog_ram:PROG_RAM_INST|altsyncram:altsyncram_component|altsyncram_rci1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
rden_a => ram_block1a0.PORTARE
rden_a => ram_block1a1.PORTARE
rden_a => ram_block1a2.PORTARE
rden_a => ram_block1a3.PORTARE
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE


|brainfuck_main|uart_tx:UART_TX_INST
i_Clock => r_Tx_Data[0].CLK
i_Clock => r_Tx_Data[1].CLK
i_Clock => r_Tx_Data[2].CLK
i_Clock => r_Tx_Data[3].CLK
i_Clock => r_Tx_Data[4].CLK
i_Clock => r_Tx_Data[5].CLK
i_Clock => r_Tx_Data[6].CLK
i_Clock => r_Tx_Data[7].CLK
i_Clock => r_Tx_Active.CLK
i_Clock => r_Bit_Index[0].CLK
i_Clock => r_Bit_Index[1].CLK
i_Clock => r_Bit_Index[2].CLK
i_Clock => r_Clock_Count[0].CLK
i_Clock => r_Clock_Count[1].CLK
i_Clock => r_Clock_Count[2].CLK
i_Clock => r_Clock_Count[3].CLK
i_Clock => r_Clock_Count[4].CLK
i_Clock => r_Clock_Count[5].CLK
i_Clock => r_Clock_Count[6].CLK
i_Clock => r_Clock_Count[7].CLK
i_Clock => r_Clock_Count[8].CLK
i_Clock => r_Clock_Count[9].CLK
i_Clock => r_Clock_Count[10].CLK
i_Clock => r_Clock_Count[11].CLK
i_Clock => r_Clock_Count[12].CLK
i_Clock => r_Clock_Count[13].CLK
i_Clock => r_Clock_Count[14].CLK
i_Clock => r_Clock_Count[15].CLK
i_Clock => r_Tx_Done.CLK
i_Clock => o_Tx_Serial~reg0.CLK
i_Clock => r_SM_Main~1.DATAIN
i_Tx_DV => r_Tx_Active.OUTPUTSELECT
i_Tx_DV => r_Tx_Data.OUTPUTSELECT
i_Tx_DV => r_Tx_Data.OUTPUTSELECT
i_Tx_DV => r_Tx_Data.OUTPUTSELECT
i_Tx_DV => r_Tx_Data.OUTPUTSELECT
i_Tx_DV => r_Tx_Data.OUTPUTSELECT
i_Tx_DV => r_Tx_Data.OUTPUTSELECT
i_Tx_DV => r_Tx_Data.OUTPUTSELECT
i_Tx_DV => r_Tx_Data.OUTPUTSELECT
i_Tx_DV => Selector23.IN3
i_Tx_DV => Selector22.IN2
i_Tx_Byte[0] => r_Tx_Data.DATAB
i_Tx_Byte[1] => r_Tx_Data.DATAB
i_Tx_Byte[2] => r_Tx_Data.DATAB
i_Tx_Byte[3] => r_Tx_Data.DATAB
i_Tx_Byte[4] => r_Tx_Data.DATAB
i_Tx_Byte[5] => r_Tx_Data.DATAB
i_Tx_Byte[6] => r_Tx_Data.DATAB
i_Tx_Byte[7] => r_Tx_Data.DATAB
o_Tx_Active <= r_Tx_Active.DB_MAX_OUTPUT_PORT_TYPE
o_Tx_Serial <= o_Tx_Serial~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Tx_Done <= r_Tx_Done.DB_MAX_OUTPUT_PORT_TYPE


|brainfuck_main|brainfuck_cpu:BRAINFUCK_INST
clk => flag_output_begin_reg.CLK
clk => bracket_delta[0].CLK
clk => bracket_delta[1].CLK
clk => bracket_delta[2].CLK
clk => bracket_delta[3].CLK
clk => bracket_delta[4].CLK
clk => bracket_delta[5].CLK
clk => bracket_delta[6].CLK
clk => bracket_delta[7].CLK
clk => bracket_delta[8].CLK
clk => bracket_delta[9].CLK
clk => program_counter[0].CLK
clk => program_counter[1].CLK
clk => program_counter[2].CLK
clk => program_counter[3].CLK
clk => program_counter[4].CLK
clk => program_counter[5].CLK
clk => program_counter[6].CLK
clk => program_counter[7].CLK
clk => program_counter[8].CLK
clk => program_counter[9].CLK
clk => wren_sig_reg.CLK
clk => rden_sig_reg.CLK
clk => data_sig_reg[0].CLK
clk => data_sig_reg[1].CLK
clk => data_sig_reg[2].CLK
clk => data_sig_reg[3].CLK
clk => data_sig_reg[4].CLK
clk => data_sig_reg[5].CLK
clk => data_sig_reg[6].CLK
clk => data_sig_reg[7].CLK
clk => address_sig_reg[0].CLK
clk => address_sig_reg[1].CLK
clk => address_sig_reg[2].CLK
clk => address_sig_reg[3].CLK
clk => address_sig_reg[4].CLK
clk => address_sig_reg[5].CLK
clk => address_sig_reg[6].CLK
clk => address_sig_reg[7].CLK
clk => address_sig_reg[8].CLK
clk => address_sig_reg[9].CLK
clk => prog_rden_sig_reg.CLK
clk => prog_wren_sig_reg.CLK
clk => prog_address_sig_reg[0].CLK
clk => prog_address_sig_reg[1].CLK
clk => prog_address_sig_reg[2].CLK
clk => prog_address_sig_reg[3].CLK
clk => prog_address_sig_reg[4].CLK
clk => prog_address_sig_reg[5].CLK
clk => prog_address_sig_reg[6].CLK
clk => prog_address_sig_reg[7].CLK
clk => prog_address_sig_reg[8].CLK
clk => prog_address_sig_reg[9].CLK
clk => bracket_flag~4.DATAIN
clk => cpu_state~7.DATAIN
rst => ~NO_FANOUT~
prog_q_sig[0] => Mux0.IN19
prog_q_sig[0] => Mux1.IN19
prog_q_sig[0] => Mux2.IN19
prog_q_sig[0] => Mux3.IN19
prog_q_sig[0] => Mux4.IN19
prog_q_sig[0] => Mux5.IN19
prog_q_sig[0] => Mux6.IN19
prog_q_sig[0] => Mux7.IN19
prog_q_sig[0] => Mux8.IN19
prog_q_sig[0] => Mux9.IN19
prog_q_sig[0] => Decoder0.IN3
prog_q_sig[0] => Equal3.IN63
prog_q_sig[0] => Equal4.IN63
prog_q_sig[1] => Mux0.IN18
prog_q_sig[1] => Mux1.IN18
prog_q_sig[1] => Mux2.IN18
prog_q_sig[1] => Mux3.IN18
prog_q_sig[1] => Mux4.IN18
prog_q_sig[1] => Mux5.IN18
prog_q_sig[1] => Mux6.IN18
prog_q_sig[1] => Mux7.IN18
prog_q_sig[1] => Mux8.IN18
prog_q_sig[1] => Mux9.IN18
prog_q_sig[1] => Decoder0.IN2
prog_q_sig[1] => Equal3.IN62
prog_q_sig[1] => Equal4.IN62
prog_q_sig[2] => Mux0.IN17
prog_q_sig[2] => Mux1.IN17
prog_q_sig[2] => Mux2.IN17
prog_q_sig[2] => Mux3.IN17
prog_q_sig[2] => Mux4.IN17
prog_q_sig[2] => Mux5.IN17
prog_q_sig[2] => Mux6.IN17
prog_q_sig[2] => Mux7.IN17
prog_q_sig[2] => Mux8.IN17
prog_q_sig[2] => Mux9.IN17
prog_q_sig[2] => Decoder0.IN1
prog_q_sig[2] => Equal3.IN61
prog_q_sig[2] => Equal4.IN61
prog_q_sig[3] => Mux0.IN16
prog_q_sig[3] => Mux1.IN16
prog_q_sig[3] => Mux2.IN16
prog_q_sig[3] => Mux3.IN16
prog_q_sig[3] => Mux4.IN16
prog_q_sig[3] => Mux5.IN16
prog_q_sig[3] => Mux6.IN16
prog_q_sig[3] => Mux7.IN16
prog_q_sig[3] => Mux8.IN16
prog_q_sig[3] => Mux9.IN16
prog_q_sig[3] => Decoder0.IN0
prog_q_sig[3] => Equal3.IN60
prog_q_sig[3] => Equal4.IN60
prog_data_sig[0] <= <GND>
prog_data_sig[1] <= <GND>
prog_data_sig[2] <= <GND>
prog_data_sig[3] <= <GND>
prog_address_sig[0] <= prog_address_sig_reg[0].DB_MAX_OUTPUT_PORT_TYPE
prog_address_sig[1] <= prog_address_sig_reg[1].DB_MAX_OUTPUT_PORT_TYPE
prog_address_sig[2] <= prog_address_sig_reg[2].DB_MAX_OUTPUT_PORT_TYPE
prog_address_sig[3] <= prog_address_sig_reg[3].DB_MAX_OUTPUT_PORT_TYPE
prog_address_sig[4] <= prog_address_sig_reg[4].DB_MAX_OUTPUT_PORT_TYPE
prog_address_sig[5] <= prog_address_sig_reg[5].DB_MAX_OUTPUT_PORT_TYPE
prog_address_sig[6] <= prog_address_sig_reg[6].DB_MAX_OUTPUT_PORT_TYPE
prog_address_sig[7] <= prog_address_sig_reg[7].DB_MAX_OUTPUT_PORT_TYPE
prog_address_sig[8] <= prog_address_sig_reg[8].DB_MAX_OUTPUT_PORT_TYPE
prog_address_sig[9] <= prog_address_sig_reg[9].DB_MAX_OUTPUT_PORT_TYPE
prog_wren_sig <= prog_wren_sig_reg.DB_MAX_OUTPUT_PORT_TYPE
prog_rden_sig <= prog_rden_sig_reg.DB_MAX_OUTPUT_PORT_TYPE
q_sig[0] => Add2.IN16
q_sig[0] => Add3.IN16
q_sig[0] => Equal1.IN31
q_sig[1] => Add2.IN15
q_sig[1] => Add3.IN15
q_sig[1] => Equal1.IN30
q_sig[2] => Add2.IN14
q_sig[2] => Add3.IN14
q_sig[2] => Equal1.IN29
q_sig[3] => Add2.IN13
q_sig[3] => Add3.IN13
q_sig[3] => Equal1.IN28
q_sig[4] => Add2.IN12
q_sig[4] => Add3.IN12
q_sig[4] => Equal1.IN27
q_sig[5] => Add2.IN11
q_sig[5] => Add3.IN11
q_sig[5] => Equal1.IN26
q_sig[6] => Add2.IN10
q_sig[6] => Add3.IN10
q_sig[6] => Equal1.IN25
q_sig[7] => Add2.IN9
q_sig[7] => Add3.IN9
q_sig[7] => Equal1.IN24
data_sig[0] <= data_sig_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_sig[1] <= data_sig_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_sig[2] <= data_sig_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_sig[3] <= data_sig_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_sig[4] <= data_sig_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_sig[5] <= data_sig_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_sig[6] <= data_sig_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_sig[7] <= data_sig_reg[7].DB_MAX_OUTPUT_PORT_TYPE
address_sig[0] <= address_sig_reg[0].DB_MAX_OUTPUT_PORT_TYPE
address_sig[1] <= address_sig_reg[1].DB_MAX_OUTPUT_PORT_TYPE
address_sig[2] <= address_sig_reg[2].DB_MAX_OUTPUT_PORT_TYPE
address_sig[3] <= address_sig_reg[3].DB_MAX_OUTPUT_PORT_TYPE
address_sig[4] <= address_sig_reg[4].DB_MAX_OUTPUT_PORT_TYPE
address_sig[5] <= address_sig_reg[5].DB_MAX_OUTPUT_PORT_TYPE
address_sig[6] <= address_sig_reg[6].DB_MAX_OUTPUT_PORT_TYPE
address_sig[7] <= address_sig_reg[7].DB_MAX_OUTPUT_PORT_TYPE
address_sig[8] <= address_sig_reg[8].DB_MAX_OUTPUT_PORT_TYPE
address_sig[9] <= address_sig_reg[9].DB_MAX_OUTPUT_PORT_TYPE
wren_sig <= wren_sig_reg.DB_MAX_OUTPUT_PORT_TYPE
rden_sig <= rden_sig_reg.DB_MAX_OUTPUT_PORT_TYPE
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => cpu_state.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => program_counter.OUTPUTSELECT
flag_output_active => flag_output_begin_reg.OUTPUTSELECT
flag_output_begin <= flag_output_begin_reg.DB_MAX_OUTPUT_PORT_TYPE


|brainfuck_main|seven_segment_controller:SEVEN_SEG_INST
i_Clk => o_Segment[0]~reg0.CLK
i_Clk => o_Segment[1]~reg0.CLK
i_Clk => o_Segment[2]~reg0.CLK
i_Clk => o_Segment[3]~reg0.CLK
i_Clk => o_Segment[4]~reg0.CLK
i_Clk => o_Segment[5]~reg0.CLK
i_Clk => o_Segment[6]~reg0.CLK
i_Clk => LED_BCD[0].CLK
i_Clk => LED_BCD[1].CLK
i_Clk => LED_BCD[2].CLK
i_Clk => LED_BCD[3].CLK
i_Clk => o_Cathode[0]~reg0.CLK
i_Clk => o_Cathode[1]~reg0.CLK
i_Clk => o_Cathode[2]~reg0.CLK
i_Clk => o_Cathode[3]~reg0.CLK
i_Clk => refresh_counter[0].CLK
i_Clk => refresh_counter[1].CLK
i_Clk => refresh_counter[2].CLK
i_Clk => refresh_counter[3].CLK
i_Clk => refresh_counter[4].CLK
i_Clk => refresh_counter[5].CLK
i_Clk => refresh_counter[6].CLK
i_Clk => refresh_counter[7].CLK
i_Clk => refresh_counter[8].CLK
i_Clk => refresh_counter[9].CLK
i_Clk => refresh_counter[10].CLK
i_Clk => refresh_counter[11].CLK
i_Clk => refresh_counter[12].CLK
i_Clk => refresh_counter[13].CLK
i_Clk => refresh_counter[14].CLK
i_Clk => refresh_counter[15].CLK
i_Clk => refresh_counter[16].CLK
i_Clk => refresh_counter[17].CLK
i_Clk => refresh_counter[18].CLK
i_Clk => refresh_counter[19].CLK
i_Clk => i_Binary_Num_reg_4[0].CLK
i_Clk => i_Binary_Num_reg_4[1].CLK
i_Clk => i_Binary_Num_reg_4[2].CLK
i_Clk => i_Binary_Num_reg_4[3].CLK
i_Clk => i_Binary_Num_reg_3[0].CLK
i_Clk => i_Binary_Num_reg_3[1].CLK
i_Clk => i_Binary_Num_reg_3[2].CLK
i_Clk => i_Binary_Num_reg_3[3].CLK
i_Clk => i_Binary_Num_reg_2[0].CLK
i_Clk => i_Binary_Num_reg_2[1].CLK
i_Clk => i_Binary_Num_reg_2[2].CLK
i_Clk => i_Binary_Num_reg_2[3].CLK
i_Clk => i_Binary_Num_reg_1[0].CLK
i_Clk => i_Binary_Num_reg_1[1].CLK
i_Clk => i_Binary_Num_reg_1[2].CLK
i_Clk => i_Binary_Num_reg_1[3].CLK
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
reset => refresh_counter.OUTPUTSELECT
i_Binary_Num_1[0] => i_Binary_Num_reg_1[0].DATAIN
i_Binary_Num_1[1] => i_Binary_Num_reg_1[1].DATAIN
i_Binary_Num_1[2] => i_Binary_Num_reg_1[2].DATAIN
i_Binary_Num_1[3] => i_Binary_Num_reg_1[3].DATAIN
i_Binary_Num_2[0] => i_Binary_Num_reg_2[0].DATAIN
i_Binary_Num_2[1] => i_Binary_Num_reg_2[1].DATAIN
i_Binary_Num_2[2] => i_Binary_Num_reg_2[2].DATAIN
i_Binary_Num_2[3] => i_Binary_Num_reg_2[3].DATAIN
i_Binary_Num_3[0] => i_Binary_Num_reg_3[0].DATAIN
i_Binary_Num_3[1] => i_Binary_Num_reg_3[1].DATAIN
i_Binary_Num_3[2] => i_Binary_Num_reg_3[2].DATAIN
i_Binary_Num_3[3] => i_Binary_Num_reg_3[3].DATAIN
i_Binary_Num_4[0] => i_Binary_Num_reg_4[0].DATAIN
i_Binary_Num_4[1] => i_Binary_Num_reg_4[1].DATAIN
i_Binary_Num_4[2] => i_Binary_Num_reg_4[2].DATAIN
i_Binary_Num_4[3] => i_Binary_Num_reg_4[3].DATAIN
o_Cathode[0] <= o_Cathode[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Cathode[1] <= o_Cathode[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Cathode[2] <= o_Cathode[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Cathode[3] <= o_Cathode[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Segment[0] <= o_Segment[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Segment[1] <= o_Segment[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Segment[2] <= o_Segment[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Segment[3] <= o_Segment[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Segment[4] <= o_Segment[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Segment[5] <= o_Segment[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Segment[6] <= o_Segment[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


